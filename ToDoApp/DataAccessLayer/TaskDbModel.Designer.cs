//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("TaskDbModel", "FK_HistoryTask_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessServices.Category), "Task1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessServices.Task1), true)]
[assembly: EdmRelationshipAttribute("TaskDbModel", "FK_Task_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessServices.Category), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessServices.Task), true)]
[assembly: EdmRelationshipAttribute("TaskDbModel", "FK_HistoryTask_Credentials", "Credentials", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessServices.Credential), "Task1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessServices.Task1), true)]
[assembly: EdmRelationshipAttribute("TaskDbModel", "FK_Task_Credentials", "Credentials", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessServices.Credential), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessServices.Task), true)]
[assembly: EdmRelationshipAttribute("TaskDbModel", "FK_HistoryTask_Priority", "Priority", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessServices.Priority), "Task1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessServices.Task1), true)]
[assembly: EdmRelationshipAttribute("TaskDbModel", "FK_Task_Priority", "Priority", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessServices.Priority), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessServices.Task), true)]
[assembly: EdmRelationshipAttribute("TaskDbModel", "FK_HistoryTask_Status", "Status", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessServices.Status), "Task1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessServices.Task1), true)]
[assembly: EdmRelationshipAttribute("TaskDbModel", "FK_Task_Status", "Status", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessServices.Status), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessServices.Task), true)]

#endregion

namespace DataAccessServices
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TaskDb : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TaskDb object using the connection string found in the 'TaskDb' section of the application configuration file.
        /// </summary>
        public TaskDb() : base("name=TaskDb", "TaskDb")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TaskDb object.
        /// </summary>
        public TaskDb(string connectionString) : base(connectionString, "TaskDb")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TaskDb object.
        /// </summary>
        public TaskDb(EntityConnection connection) : base(connection, "TaskDb")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Credential> Credentials
        {
            get
            {
                if ((_Credentials == null))
                {
                    _Credentials = base.CreateObjectSet<Credential>("Credentials");
                }
                return _Credentials;
            }
        }
        private ObjectSet<Credential> _Credentials;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Priority> Priorities
        {
            get
            {
                if ((_Priorities == null))
                {
                    _Priorities = base.CreateObjectSet<Priority>("Priorities");
                }
                return _Priorities;
            }
        }
        private ObjectSet<Priority> _Priorities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Status> Status
        {
            get
            {
                if ((_Status == null))
                {
                    _Status = base.CreateObjectSet<Status>("Status");
                }
                return _Status;
            }
        }
        private ObjectSet<Status> _Status;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task1> Task1
        {
            get
            {
                if ((_Task1 == null))
                {
                    _Task1 = base.CreateObjectSet<Task1>("Task1");
                }
                return _Task1;
            }
        }
        private ObjectSet<Task1> _Task1;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Credentials EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCredentials(Credential credential)
        {
            base.AddObject("Credentials", credential);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Priorities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPriorities(Priority priority)
        {
            base.AddObject("Priorities", priority);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Status EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatus(Status status)
        {
            base.AddObject("Status", status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Task1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTask1(Task1 task1)
        {
            base.AddObject("Task1", task1);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaskDbModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="categoryText">Initial value of the CategoryText property.</param>
        /// <param name="lastUpdateDateTime">Initial value of the LastUpdateDateTime property.</param>
        /// <param name="addDateTime">Initial value of the AddDateTime property.</param>
        public static Category CreateCategory(global::System.Int16 categoryId, global::System.String categoryText, global::System.DateTime lastUpdateDateTime, global::System.DateTime addDateTime)
        {
            Category category = new Category();
            category.CategoryId = categoryId;
            category.CategoryText = categoryText;
            category.LastUpdateDateTime = lastUpdateDateTime;
            category.AddDateTime = addDateTime;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int16 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int16 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryText
        {
            get
            {
                return _CategoryText;
            }
            set
            {
                OnCategoryTextChanging(value);
                ReportPropertyChanging("CategoryText");
                _CategoryText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryText");
                OnCategoryTextChanged();
            }
        }
        private global::System.String _CategoryText;
        partial void OnCategoryTextChanging(global::System.String value);
        partial void OnCategoryTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateDateTime
        {
            get
            {
                return _LastUpdateDateTime;
            }
            set
            {
                OnLastUpdateDateTimeChanging(value);
                ReportPropertyChanging("LastUpdateDateTime");
                _LastUpdateDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdateDateTime");
                OnLastUpdateDateTimeChanged();
            }
        }
        private global::System.DateTime _LastUpdateDateTime;
        partial void OnLastUpdateDateTimeChanging(global::System.DateTime value);
        partial void OnLastUpdateDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddDateTime
        {
            get
            {
                return _AddDateTime;
            }
            set
            {
                OnAddDateTimeChanging(value);
                ReportPropertyChanging("AddDateTime");
                _AddDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddDateTime");
                OnAddDateTimeChanged();
            }
        }
        private global::System.DateTime _AddDateTime;
        partial void OnAddDateTimeChanging(global::System.DateTime value);
        partial void OnAddDateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskDbModel", "FK_HistoryTask_Category", "Task1")]
        public EntityCollection<Task1> Task1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task1>("TaskDbModel.FK_HistoryTask_Category", "Task1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task1>("TaskDbModel.FK_HistoryTask_Category", "Task1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskDbModel", "FK_Task_Category", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("TaskDbModel.FK_Task_Category", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("TaskDbModel.FK_Task_Category", "Task", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaskDbModel", Name="Credential")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Credential : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Credential object.
        /// </summary>
        /// <param name="credentialsId">Initial value of the CredentialsId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastUpdateDateTime">Initial value of the LastUpdateDateTime property.</param>
        /// <param name="addDateTime">Initial value of the AddDateTime property.</param>
        public static Credential CreateCredential(global::System.Int64 credentialsId, global::System.String userId, global::System.String password, global::System.String email, global::System.String lastName, global::System.String firstName, global::System.DateTime lastUpdateDateTime, global::System.DateTime addDateTime)
        {
            Credential credential = new Credential();
            credential.CredentialsId = credentialsId;
            credential.UserId = userId;
            credential.Password = password;
            credential.Email = email;
            credential.LastName = lastName;
            credential.FirstName = firstName;
            credential.LastUpdateDateTime = lastUpdateDateTime;
            credential.AddDateTime = addDateTime;
            return credential;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CredentialsId
        {
            get
            {
                return _CredentialsId;
            }
            set
            {
                if (_CredentialsId != value)
                {
                    OnCredentialsIdChanging(value);
                    ReportPropertyChanging("CredentialsId");
                    _CredentialsId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CredentialsId");
                    OnCredentialsIdChanged();
                }
            }
        }
        private global::System.Int64 _CredentialsId;
        partial void OnCredentialsIdChanging(global::System.Int64 value);
        partial void OnCredentialsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateDateTime
        {
            get
            {
                return _LastUpdateDateTime;
            }
            set
            {
                OnLastUpdateDateTimeChanging(value);
                ReportPropertyChanging("LastUpdateDateTime");
                _LastUpdateDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdateDateTime");
                OnLastUpdateDateTimeChanged();
            }
        }
        private global::System.DateTime _LastUpdateDateTime;
        partial void OnLastUpdateDateTimeChanging(global::System.DateTime value);
        partial void OnLastUpdateDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddDateTime
        {
            get
            {
                return _AddDateTime;
            }
            set
            {
                OnAddDateTimeChanging(value);
                ReportPropertyChanging("AddDateTime");
                _AddDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddDateTime");
                OnAddDateTimeChanged();
            }
        }
        private global::System.DateTime _AddDateTime;
        partial void OnAddDateTimeChanging(global::System.DateTime value);
        partial void OnAddDateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskDbModel", "FK_HistoryTask_Credentials", "Task1")]
        public EntityCollection<Task1> Task1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task1>("TaskDbModel.FK_HistoryTask_Credentials", "Task1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task1>("TaskDbModel.FK_HistoryTask_Credentials", "Task1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskDbModel", "FK_Task_Credentials", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("TaskDbModel.FK_Task_Credentials", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("TaskDbModel.FK_Task_Credentials", "Task", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaskDbModel", Name="Priority")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Priority : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Priority object.
        /// </summary>
        /// <param name="priorityId">Initial value of the PriorityId property.</param>
        /// <param name="priorityText">Initial value of the PriorityText property.</param>
        /// <param name="lastUpdateDateTime">Initial value of the LastUpdateDateTime property.</param>
        /// <param name="addDateTime">Initial value of the AddDateTime property.</param>
        public static Priority CreatePriority(global::System.Int16 priorityId, global::System.String priorityText, global::System.DateTime lastUpdateDateTime, global::System.DateTime addDateTime)
        {
            Priority priority = new Priority();
            priority.PriorityId = priorityId;
            priority.PriorityText = priorityText;
            priority.LastUpdateDateTime = lastUpdateDateTime;
            priority.AddDateTime = addDateTime;
            return priority;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 PriorityId
        {
            get
            {
                return _PriorityId;
            }
            set
            {
                if (_PriorityId != value)
                {
                    OnPriorityIdChanging(value);
                    ReportPropertyChanging("PriorityId");
                    _PriorityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PriorityId");
                    OnPriorityIdChanged();
                }
            }
        }
        private global::System.Int16 _PriorityId;
        partial void OnPriorityIdChanging(global::System.Int16 value);
        partial void OnPriorityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PriorityText
        {
            get
            {
                return _PriorityText;
            }
            set
            {
                OnPriorityTextChanging(value);
                ReportPropertyChanging("PriorityText");
                _PriorityText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PriorityText");
                OnPriorityTextChanged();
            }
        }
        private global::System.String _PriorityText;
        partial void OnPriorityTextChanging(global::System.String value);
        partial void OnPriorityTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateDateTime
        {
            get
            {
                return _LastUpdateDateTime;
            }
            set
            {
                OnLastUpdateDateTimeChanging(value);
                ReportPropertyChanging("LastUpdateDateTime");
                _LastUpdateDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdateDateTime");
                OnLastUpdateDateTimeChanged();
            }
        }
        private global::System.DateTime _LastUpdateDateTime;
        partial void OnLastUpdateDateTimeChanging(global::System.DateTime value);
        partial void OnLastUpdateDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddDateTime
        {
            get
            {
                return _AddDateTime;
            }
            set
            {
                OnAddDateTimeChanging(value);
                ReportPropertyChanging("AddDateTime");
                _AddDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddDateTime");
                OnAddDateTimeChanged();
            }
        }
        private global::System.DateTime _AddDateTime;
        partial void OnAddDateTimeChanging(global::System.DateTime value);
        partial void OnAddDateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskDbModel", "FK_HistoryTask_Priority", "Task1")]
        public EntityCollection<Task1> Task1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task1>("TaskDbModel.FK_HistoryTask_Priority", "Task1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task1>("TaskDbModel.FK_HistoryTask_Priority", "Task1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskDbModel", "FK_Task_Priority", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("TaskDbModel.FK_Task_Priority", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("TaskDbModel.FK_Task_Priority", "Task", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaskDbModel", Name="Status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Status object.
        /// </summary>
        /// <param name="statusId">Initial value of the StatusId property.</param>
        /// <param name="statusText">Initial value of the StatusText property.</param>
        /// <param name="lastUpdateDateTime">Initial value of the LastUpdateDateTime property.</param>
        /// <param name="addDateTime">Initial value of the AddDateTime property.</param>
        public static Status CreateStatus(global::System.Int16 statusId, global::System.String statusText, global::System.DateTime lastUpdateDateTime, global::System.DateTime addDateTime)
        {
            Status status = new Status();
            status.StatusId = statusId;
            status.StatusText = statusText;
            status.LastUpdateDateTime = lastUpdateDateTime;
            status.AddDateTime = addDateTime;
            return status;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                if (_StatusId != value)
                {
                    OnStatusIdChanging(value);
                    ReportPropertyChanging("StatusId");
                    _StatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StatusId");
                    OnStatusIdChanged();
                }
            }
        }
        private global::System.Int16 _StatusId;
        partial void OnStatusIdChanging(global::System.Int16 value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusText
        {
            get
            {
                return _StatusText;
            }
            set
            {
                OnStatusTextChanging(value);
                ReportPropertyChanging("StatusText");
                _StatusText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StatusText");
                OnStatusTextChanged();
            }
        }
        private global::System.String _StatusText;
        partial void OnStatusTextChanging(global::System.String value);
        partial void OnStatusTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateDateTime
        {
            get
            {
                return _LastUpdateDateTime;
            }
            set
            {
                OnLastUpdateDateTimeChanging(value);
                ReportPropertyChanging("LastUpdateDateTime");
                _LastUpdateDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdateDateTime");
                OnLastUpdateDateTimeChanged();
            }
        }
        private global::System.DateTime _LastUpdateDateTime;
        partial void OnLastUpdateDateTimeChanging(global::System.DateTime value);
        partial void OnLastUpdateDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddDateTime
        {
            get
            {
                return _AddDateTime;
            }
            set
            {
                OnAddDateTimeChanging(value);
                ReportPropertyChanging("AddDateTime");
                _AddDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddDateTime");
                OnAddDateTimeChanged();
            }
        }
        private global::System.DateTime _AddDateTime;
        partial void OnAddDateTimeChanging(global::System.DateTime value);
        partial void OnAddDateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskDbModel", "FK_HistoryTask_Status", "Task1")]
        public EntityCollection<Task1> Task1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task1>("TaskDbModel.FK_HistoryTask_Status", "Task1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task1>("TaskDbModel.FK_HistoryTask_Status", "Task1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskDbModel", "FK_Task_Status", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("TaskDbModel.FK_Task_Status", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("TaskDbModel.FK_Task_Status", "Task", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaskDbModel", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Task object.
        /// </summary>
        /// <param name="taskId">Initial value of the TaskId property.</param>
        /// <param name="credentialsId">Initial value of the CredentialsId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="lastUpdateDateTime">Initial value of the LastUpdateDateTime property.</param>
        /// <param name="addDateTime">Initial value of the AddDateTime property.</param>
        public static Task CreateTask(global::System.Int64 taskId, global::System.Int64 credentialsId, global::System.String description, global::System.DateTime lastUpdateDateTime, global::System.DateTime addDateTime)
        {
            Task task = new Task();
            task.TaskId = taskId;
            task.CredentialsId = credentialsId;
            task.Description = description;
            task.LastUpdateDateTime = lastUpdateDateTime;
            task.AddDateTime = addDateTime;
            return task;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TaskId
        {
            get
            {
                return _TaskId;
            }
            set
            {
                if (_TaskId != value)
                {
                    OnTaskIdChanging(value);
                    ReportPropertyChanging("TaskId");
                    _TaskId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaskId");
                    OnTaskIdChanged();
                }
            }
        }
        private global::System.Int64 _TaskId;
        partial void OnTaskIdChanging(global::System.Int64 value);
        partial void OnTaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CredentialsId
        {
            get
            {
                return _CredentialsId;
            }
            set
            {
                OnCredentialsIdChanging(value);
                ReportPropertyChanging("CredentialsId");
                _CredentialsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CredentialsId");
                OnCredentialsIdChanged();
            }
        }
        private global::System.Int64 _CredentialsId;
        partial void OnCredentialsIdChanging(global::System.Int64 value);
        partial void OnCredentialsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int16> _CategoryId;
        partial void OnCategoryIdChanging(Nullable<global::System.Int16> value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int16> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int16> value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> PriorityId
        {
            get
            {
                return _PriorityId;
            }
            set
            {
                OnPriorityIdChanging(value);
                ReportPropertyChanging("PriorityId");
                _PriorityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriorityId");
                OnPriorityIdChanged();
            }
        }
        private Nullable<global::System.Int16> _PriorityId;
        partial void OnPriorityIdChanging(Nullable<global::System.Int16> value);
        partial void OnPriorityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DueDate;
        partial void OnDueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateDateTime
        {
            get
            {
                return _LastUpdateDateTime;
            }
            set
            {
                OnLastUpdateDateTimeChanging(value);
                ReportPropertyChanging("LastUpdateDateTime");
                _LastUpdateDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdateDateTime");
                OnLastUpdateDateTimeChanged();
            }
        }
        private global::System.DateTime _LastUpdateDateTime;
        partial void OnLastUpdateDateTimeChanging(global::System.DateTime value);
        partial void OnLastUpdateDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddDateTime
        {
            get
            {
                return _AddDateTime;
            }
            set
            {
                OnAddDateTimeChanging(value);
                ReportPropertyChanging("AddDateTime");
                _AddDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddDateTime");
                OnAddDateTimeChanged();
            }
        }
        private global::System.DateTime _AddDateTime;
        partial void OnAddDateTimeChanging(global::System.DateTime value);
        partial void OnAddDateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskDbModel", "FK_Task_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TaskDbModel.FK_Task_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TaskDbModel.FK_Task_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TaskDbModel.FK_Task_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("TaskDbModel.FK_Task_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskDbModel", "FK_Task_Credentials", "Credentials")]
        public Credential Credential
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Credential>("TaskDbModel.FK_Task_Credentials", "Credentials").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Credential>("TaskDbModel.FK_Task_Credentials", "Credentials").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Credential> CredentialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Credential>("TaskDbModel.FK_Task_Credentials", "Credentials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Credential>("TaskDbModel.FK_Task_Credentials", "Credentials", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskDbModel", "FK_Task_Priority", "Priority")]
        public Priority Priority
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("TaskDbModel.FK_Task_Priority", "Priority").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("TaskDbModel.FK_Task_Priority", "Priority").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Priority> PriorityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("TaskDbModel.FK_Task_Priority", "Priority");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Priority>("TaskDbModel.FK_Task_Priority", "Priority", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskDbModel", "FK_Task_Status", "Status")]
        public Status Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("TaskDbModel.FK_Task_Status", "Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("TaskDbModel.FK_Task_Status", "Status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Status> StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("TaskDbModel.FK_Task_Status", "Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Status>("TaskDbModel.FK_Task_Status", "Status", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaskDbModel", Name="Task1")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task1 : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Task1 object.
        /// </summary>
        /// <param name="taskId">Initial value of the TaskId property.</param>
        /// <param name="credentialsId">Initial value of the CredentialsId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="lastUpdateDateTime">Initial value of the LastUpdateDateTime property.</param>
        /// <param name="addDateTime">Initial value of the AddDateTime property.</param>
        /// <param name="transactionDateTime">Initial value of the TransactionDateTime property.</param>
        public static Task1 CreateTask1(global::System.Int64 taskId, global::System.Int64 credentialsId, global::System.String description, global::System.DateTime lastUpdateDateTime, global::System.DateTime addDateTime, global::System.DateTime transactionDateTime)
        {
            Task1 task1 = new Task1();
            task1.TaskId = taskId;
            task1.CredentialsId = credentialsId;
            task1.Description = description;
            task1.LastUpdateDateTime = lastUpdateDateTime;
            task1.AddDateTime = addDateTime;
            task1.TransactionDateTime = transactionDateTime;
            return task1;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TaskId
        {
            get
            {
                return _TaskId;
            }
            set
            {
                if (_TaskId != value)
                {
                    OnTaskIdChanging(value);
                    ReportPropertyChanging("TaskId");
                    _TaskId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaskId");
                    OnTaskIdChanged();
                }
            }
        }
        private global::System.Int64 _TaskId;
        partial void OnTaskIdChanging(global::System.Int64 value);
        partial void OnTaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CredentialsId
        {
            get
            {
                return _CredentialsId;
            }
            set
            {
                OnCredentialsIdChanging(value);
                ReportPropertyChanging("CredentialsId");
                _CredentialsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CredentialsId");
                OnCredentialsIdChanged();
            }
        }
        private global::System.Int64 _CredentialsId;
        partial void OnCredentialsIdChanging(global::System.Int64 value);
        partial void OnCredentialsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int16> _CategoryId;
        partial void OnCategoryIdChanging(Nullable<global::System.Int16> value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int16> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int16> value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> PriorityId
        {
            get
            {
                return _PriorityId;
            }
            set
            {
                OnPriorityIdChanging(value);
                ReportPropertyChanging("PriorityId");
                _PriorityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriorityId");
                OnPriorityIdChanged();
            }
        }
        private Nullable<global::System.Int16> _PriorityId;
        partial void OnPriorityIdChanging(Nullable<global::System.Int16> value);
        partial void OnPriorityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DueDate;
        partial void OnDueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateDateTime
        {
            get
            {
                return _LastUpdateDateTime;
            }
            set
            {
                OnLastUpdateDateTimeChanging(value);
                ReportPropertyChanging("LastUpdateDateTime");
                _LastUpdateDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdateDateTime");
                OnLastUpdateDateTimeChanged();
            }
        }
        private global::System.DateTime _LastUpdateDateTime;
        partial void OnLastUpdateDateTimeChanging(global::System.DateTime value);
        partial void OnLastUpdateDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddDateTime
        {
            get
            {
                return _AddDateTime;
            }
            set
            {
                OnAddDateTimeChanging(value);
                ReportPropertyChanging("AddDateTime");
                _AddDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddDateTime");
                OnAddDateTimeChanged();
            }
        }
        private global::System.DateTime _AddDateTime;
        partial void OnAddDateTimeChanging(global::System.DateTime value);
        partial void OnAddDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransactionDateTime
        {
            get
            {
                return _TransactionDateTime;
            }
            set
            {
                OnTransactionDateTimeChanging(value);
                ReportPropertyChanging("TransactionDateTime");
                _TransactionDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionDateTime");
                OnTransactionDateTimeChanged();
            }
        }
        private global::System.DateTime _TransactionDateTime;
        partial void OnTransactionDateTimeChanging(global::System.DateTime value);
        partial void OnTransactionDateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskDbModel", "FK_HistoryTask_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TaskDbModel.FK_HistoryTask_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TaskDbModel.FK_HistoryTask_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("TaskDbModel.FK_HistoryTask_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("TaskDbModel.FK_HistoryTask_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskDbModel", "FK_HistoryTask_Credentials", "Credentials")]
        public Credential Credential
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Credential>("TaskDbModel.FK_HistoryTask_Credentials", "Credentials").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Credential>("TaskDbModel.FK_HistoryTask_Credentials", "Credentials").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Credential> CredentialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Credential>("TaskDbModel.FK_HistoryTask_Credentials", "Credentials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Credential>("TaskDbModel.FK_HistoryTask_Credentials", "Credentials", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskDbModel", "FK_HistoryTask_Priority", "Priority")]
        public Priority Priority
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("TaskDbModel.FK_HistoryTask_Priority", "Priority").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("TaskDbModel.FK_HistoryTask_Priority", "Priority").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Priority> PriorityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("TaskDbModel.FK_HistoryTask_Priority", "Priority");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Priority>("TaskDbModel.FK_HistoryTask_Priority", "Priority", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TaskDbModel", "FK_HistoryTask_Status", "Status")]
        public Status Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("TaskDbModel.FK_HistoryTask_Status", "Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("TaskDbModel.FK_HistoryTask_Status", "Status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Status> StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("TaskDbModel.FK_HistoryTask_Status", "Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Status>("TaskDbModel.FK_HistoryTask_Status", "Status", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
